@book{awodey-cattheory,
author = {Awodey, Steve},
title = {Category Theory},
year = {2010},
isbn = {0199237182},
publisher = {Oxford University Press, Inc.},
address = {USA},
edition = {2nd},
}

@InProceedings{courtieu-normalizedtypes,
author="Courtieu, Pierre",
editor="Fribourg, Laurent",
title="Normalized Types",
booktitle="Computer Science Logic",
year="2001",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="554--569",
abstract="We present a new method to specify a certain class of quotient in intentional type theory, and in the calculus of inductive constructions in particular. We define the notion of ``normalized types''. The main idea is to associate a normalization function to a type, instead of the usual relation. This function allows to compute on a particular element for each equivalence class, avoiding the difficult task of computing on equivalence classes themselves. We restrict ourselves to quotients that allow the construction of such a function, i.e. quotient having a canonical member for each equivalence class. This method is described as an extension of the calculus of constructions allowing normalized types. We prove that this calculus has the properties of strong normalization, subject reduction, decidability of typing. In order to show the example of the definition of â„¤ by a normalized type, we finally present a pseudo Coq session.",
isbn="978-3-540-44802-0"
}

@techreport{HoTTbook,
Author = {The Univalent Foundations Program},
Institution = {Institute for Advanced Study},
Title = {Homotopy type theory: Univalent foundations of mathematics},
Year = {2013}}

@phdthesis{werner-cic,
  title={Une th{\'e}orie des constructions inductives},
  author={Werner, Benjamin},
  year={1994},
  school={Universit{\'e} Paris-Diderot-Paris VII}
}

@misc{hewer2023quotient,
  title={Quotient Haskell},
  author={Hewer, Brandon and HUTTON, GRAHAM},
  year={2023}
}

@phdthesis{streicher1993investigations,
  title={Investigations into intensional type theory},
  author={Streicher, Thomas},
  year={1993},
  school={Habilitationsschrift, Ludwig-Maximilians-Universit{\"a}t M{\"u}nchen}
}

@incollection{martin1975intuitionistic,
  title={An intuitionistic theory of types: Predicative part},
  author={Martin-L{\"o}f, Per},
  booktitle={Studies in Logic and the Foundations of Mathematics},
  volume={80},
  pages={73--118},
  year={1975},
  publisher={Elsevier}
}

@incollection{martin1982constructive,
  title={Constructive mathematics and computer programming},
  author={Martin-L{\"o}f, Per},
  booktitle={Studies in Logic and the Foundations of Mathematics},
  volume={104},
  pages={153--175},
  year={1982},
  publisher={Elsevier}
}

@article{Leroy-Compcert-CACM,
  author = {Xavier Leroy},
  title = {Formal verification of a realistic compiler},
  journal = {Communications of the ACM},
  year = 2009,
  volume = 52,
  number = 7,
  pages = {107--115},
  url = {http://xavierleroy.org/publi/compcert-CACM.pdf},
  urlpublisher = {http://doi.acm.org/10.1145/1538788.1538814},
  hal = {http://hal.archives-ouvertes.fr/inria-00415861/},
  pubkind = {journal-int-mono},
  abstract = {This paper reports on the development and formal verification (proof
of semantic preservation) of CompCert, a compiler from Clight (a
large subset of the C programming language) to PowerPC assembly code,
using the Coq proof assistant both for programming the compiler and
for proving its correctness.  Such a verified compiler is useful in
the context of critical software and its formal verification: the
verification of the compiler guarantees that the safety properties
proved on the source code hold for the executable compiled code as
well.}
}

@article{hedberg1998coherence,
  title={A coherence theorem for Martin-L{\"o}f's type theory},
  author={Hedberg, Michael},
  journal={Journal of Functional Programming},
  volume={8},
  number={4},
  pages={413--436},
  year={1998},
  publisher={Cambridge University Press}
}

@inproceedings{bezem2014model,
  title={A model of type theory in cubical sets},
  author={Bezem, Marc and Coquand, Thierry and Huber, Simon},
  booktitle={19th International conference on types for proofs and programs (TYPES 2013)},
  volume={26},
  pages={107--128},
  year={2014}
}

@inproceedings{sulzmann2007systemfeq,
  title={System F with type equality coercions},
  author={Sulzmann, Martin and Chakravarty, Manuel MT and Jones, Simon Peyton and Donnelly, Kevin},
  booktitle={Proceedings of the 2007 ACM SIGPLAN international workshop on Types in languages design and implementation},
  pages={53--66},
  year={2007}
}

@book{chlipala2022certified,
  title={Certified programming with dependent types: a pragmatic introduction to the Coq proof assistant},
  author={Chlipala, Adam},
  year={2022},
  publisher={MIT Press}
}


@inproceedings{barras2008implicit,
  title={The implicit calculus of constructions as a programming language with dependent types},
  author={Barras, Bruno and Bernardo, Bruno},
  booktitle={Foundations of Software Science and Computational Structures: 11th International Conference, FOSSACS 2008, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2008, Budapest, Hungary, March 29-April 6, 2008. Proceedings 11},
  pages={365--379},
  year={2008},
  organization={Springer}
}

@article{sozeau2013univalence,
  title={Univalence for free},
  author={Sozeau, Matthieu and Tabareau, Nicolas},
  year={2013}
}

@article{monnier2019typer,
  title={Typer: ML boosted with type theory and Scheme},
  author={Monnier, Stefan},
  journal={Journ{\'e}es Francophones des Langages Applicatifs},
  pages={193--208},
  year={2019}
}

@article{delaunay2017implementation,
  title={Impl{\'e}mentation d'un langage fonctionnel orient{\'e} vers la m{\'e}ta programmation},
  author={Delaunay, Pierre},
  year={2017}
}

@article{vezzosi2021cubical,
  title={Cubical Agda: A dependently typed programming language with univalence and higher inductive types},
  author={Vezzosi, Andrea and M{\"o}rtberg, Anders and Abel, Andreas},
  journal={Journal of Functional Programming},
  volume={31},
  pages={e8},
  year={2021},
  publisher={Cambridge University Press}
}

@phdthesis{li2015quotient,
  title={Quotient types in type theory},
  author={Li, Nuo},
  year={2015},
  school={University of Nottingham}
}
